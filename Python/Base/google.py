from googlesearch import search
import shutil
import time, sys, keyboard, msvcrt, os, random, logging, logging.config
import googlesearch
from cryptography.fernet import Fernet
import pyfiglet
import rich
from rich.console import Console
from rich.prompt import Prompt
from os import walk
from rich.style import Style
from rich.progress import track
import subprocess
import time
from rich.progress import Progress
os.system("cls")
with Progress(transient=True) as progress:
    task1 = progress.add_task("[red]Downloading...", total=500)
    while not progress.finished:
        progress.update(task1, advance=2)
        time.sleep(0.0001)
os.system("cls")
con = Console()
banner = pyfiglet.figlet_format("OMNI.X",font="banner3-D")
con.print(banner,"Most discreate way to search",style="bold green")
p = 1
def searchalgo(p):
    os.system("cls")
    con = Console()
    banner = pyfiglet.figlet_format("OMNI.X",font="banner3-D")
    # then printing that out with rich console and a little intro
    con.print(banner,style="bold green")
    print(" ")
    blue_style = Style(color="cyan")
    con.print("What would u like to search? \t",style=blue_style)
    query = input("-  ")
    print(" ")
    con.print("How many results?",style=blue_style)
    results = int(input("-  "))
    if results > 30:
        print(" ")
        con.print("your value was to high, results will be lowerd to 30",style="red on black")
        time.sleep(4)
        results = 30
    os.system("cls")
    with Progress() as progress:
        task1 = progress.add_task("[red]Searching...", total=results*2)
        for i in search(query, tld="us", num=results, stop=results):
            time.sleep(0.1)
            print(i)
            progress.update(task1, advance=2)
    logw(query, results, p)
def logw(query, results, p):
    with open('filekey.key', 'rb') as filekey:
        key = filekey.read()
    fernet = Fernet(key)
    with open('history.log', 'rb') as enc_file:
    	encrypted = enc_file.read()
    decrypted = fernet.decrypt(encrypted)
    with open('history.log', 'wb') as dec_file:
    	dec_file.write(decrypted)
    logging.error(f"root searched: '{query}', and wanted {results} results")
    key = Fernet.generate_key()
    with open('filekey.key', 'wb') as filekey:
        filekey.write(key)
    with open('filekey.key', 'rb') as filekey:
    	key = filekey.read()
    fernet = Fernet(key)
    with open('history.log', 'rb') as file:
    	original = file.read()
    encrypted = fernet.encrypt(original)
    with open('history.log', 'wb') as encrypted_file:
    	encrypted_file.write(encrypted)
    options(p)

def startmusic(p):
    con = Console()
    if p == 1:
        p = subprocess.Popen(['python','Python\Base\musicplayer.py'])
    else:
        print(" ")
        con.print("Song is already playing, maybe increase your volume?",style="#c90000")
        time.sleep(5)
    os.system("cls")
    banner = pyfiglet.figlet_format("OMNI.X",font="banner3-D")
    con.print(banner,"Most discreate way to search",style="bold green")
    options(p)

def endmusic(p):
    p.terminate()
    p = 1
    os.system("cls")
    con = Console()
    banner = pyfiglet.figlet_format("OMNI.X",font="banner3-D")
    con.print(banner,"Most discreate way to search",style="bold green")
    options(p)

def options(p):
    print(" ")
    con.print("Press 1 for search",style="cyan")
    con.print("Press 2 for history",style="cyan")
    con.print("Press 3 to start eminim",style="cyan")
    con.print("Press 4 to stop eminim",style="cyan")
    con.print("Press 5 to terminate the program",style="cyan")
    value = input("- ")
    if value == "1":
        redo(p)
    elif value == "2":
        history(p)
    elif value == "5":
        end()
    elif value == "3":
        startmusic(p)
    elif value == "4":
        endmusic(p)
    elif value == "0":
        devtools(p)
    else:
        print("Input error you will be redirected to search")
        time.sleep(4)
        redo(p)
def history(p):
    with open('filekey.key', 'rb') as filekey:
        key = filekey.read()
    fernet = Fernet(key)
    with open('history.log', 'rb') as enc_file:
    	encrypted = enc_file.read()
    decrypted = fernet.decrypt(encrypted)
    with open('history.log', 'wb') as dec_file:
    	dec_file.write(decrypted)
    file = open('history.log', 'r')
    lines = file.read()
    file.close()
    print(lines)
    historyclear = input("do you want to clear the file? [y for yes, n for no] \t")
    if historyclear == "y":
        data = data2 = ""
        with open('Python/Backup Logs/history backup.log') as fp:
        	data = fp.read()
        with open('history.log') as fp:
        	data2 = fp.read()
        data += "\n"
        data += data2
        with open ('secreat_sause.log', 'a') as fp:
        	fp.write(data)
        os.system('copy "history.log" "Python/Backup Logs/history backup.log"')
        with open('history.log', 'w'):
            pass
        key = Fernet.generate_key()
        with open('filekey.key', 'wb') as filekey:
            filekey.write(key)
        with open('filekey.key', 'rb') as filekey:
        	key = filekey.read()
        fernet = Fernet(key)
        with open('history.log', 'rb') as file:
        	original = file.read()
        encrypted = fernet.encrypt(original)
        with open('history.log', 'wb') as encrypted_file:
        	encrypted_file.write(encrypted)
        options(p)
    else:
        key = Fernet.generate_key()
        with open('filekey.key', 'wb') as filekey:
            filekey.write(key)
        with open('filekey.key', 'rb') as filekey:
        	key = filekey.read()
        fernet = Fernet(key)
        with open('history.log', 'rb') as file:
        	original = file.read()
        encrypted = fernet.encrypt(original)
        with open('history.log', 'wb') as encrypted_file:
        	encrypted_file.write(encrypted)
        options(p)


def end():
    for i in range(5, -1, -1,):
        os.system("cls")
        con.print(f"System will now terminate in {i} seconds",style="red")
        time.sleep(1)
    con.print("SYSTEM TERMINATED",style="bold red")
    time.sleep(2)
    os.system("cls")
    sys.exit()
def redo(p):
    searchalgo(p)

def decrypt(p):
    with open('filekey.key', 'rb') as filekey:
        key = filekey.read()
    fernet = Fernet(key)
    with open('history.log', 'rb') as enc_file:
    	encrypted = enc_file.read()
    decrypted = fernet.decrypt(encrypted)
    with open('history.log', 'wb') as dec_file:
    	dec_file.write(decrypted)
    devtools(p)

def encrypt(p):
    key = Fernet.generate_key()
    with open('filekey.key', 'wb') as filekey:
        filekey.write(key)
    with open('filekey.key', 'rb') as filekey:
    	key = filekey.read()
    fernet = Fernet(key)
    with open('history.log', 'rb') as file:
    	original = file.read()
    encrypted = fernet.encrypt(original)
    with open('history.log', 'wb') as encrypted_file:
    	encrypted_file.write(encrypted)
    devtools(p)

def devtools(p):
    os.system("cls")
    banner = pyfiglet.figlet_format("DEV",font="banner3-D")
    con.print(banner, style="bold green")
    print(" ")
    con.print("!! THIS IS FOR DEVS ONLY !!",style="red")
    print(" ")
    blue_style = Style(color="cyan")
    con.print("press 0 to see history file (NO PROSSESING)", style=blue_style)
    con.print("press 1 to recrypt history file", style=blue_style)
    con.print("press 2 to decrypt history file", style=blue_style)
    con.print("press 3 to go back", style=blue_style)
    x = input()
    if x == "1":
        encrypt(p)
    elif x == "2":
        decrypt(p)
    elif x == "3":
        options(p)
    elif x == "0":
        os.system("cls")
        file = open('history.log', 'r')
        lines = file.read()
        file.close()
        con.print("!! THIS IS FOR DEVS ONLY !!",style="magenta")
        print(lines)
        time.sleep(5)
        retry(p)     
    else:
        os.system("cls")
        con.print(banner,"!! THIS IS FOR DEVS ONLY !!",style="bold green")
        danger_style = Style(color="red", blink=True, bold=True)
        con.print("GET OUTTA HERE FOOL YOU HAVE NO CLUE AS TO WHAT YOUR DOING", style=danger_style)
        time.sleep(4)
        searchalgo(p)

def retry(p):
    devtools(p)


Log_Format ='%(asctime)s - %(message)s'
datefmt ='%d-%b-%y %H:%M:%S'
logging.basicConfig(filename = "history.log",
                    filemode = "a",
                    format = Log_Format, 
                    level = logging.ERROR)
logger = logging.getLogger()

def error(p):
    print(r"# A fatal error has been detected by the Java Runtime Environment:")
    time.sleep(0.002)
    print(r"#")
    time.sleep(0.002)
    print(r"#  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x00000000377513ff, pid=6132, tid=30616")
    time.sleep(0.002)
    print(r"#")
    time.sleep(0.002)
    print(r"# JRE version: Java(TM) SE Runtime Environment (8.0_51-b16) (build 1.8.0_51-b16)")
    time.sleep(0.002)
    print(r"# Java VM: Java HotSpot(TM) 64-Bit Server VM (25.51-b03 mixed mode windows-amd64 compressed oops)")
    time.sleep(0.002)
    print(r"# Problematic frame:")
    time.sleep(0.002)
    print(r"# C  0x00000000377513ff")
    time.sleep(0.002)
    print(r"#")
    time.sleep(0.002)
    print(r"# Failed to write core dump. Minidumps are not enabled by default on client versions of Windows")
    time.sleep(0.002)
    print(r"#")
    time.sleep(0.002)
    print(r"# If you would like to submit a bug report, please visit:")
    time.sleep(0.002)
    print(r"#   http://bugreport.java.com/bugreport/crash.jsp")
    time.sleep(0.002)
    print(r"# The crash happened outside the Java Virtual Machine in native code.")
    time.sleep(0.002)
    print(r"# See problematic frame for where to report the bug.")
    time.sleep(0.002)
    print(r"#")

    time.sleep(0.002)
    print(r"---------------  T H R E A D  ---------------")

    time.sleep(0.002)
    print(r"""Current thread (0x0000000002f82800):  JavaThread "Render thread" [_thread_in_native, id=30616, stack(0x0000000002e80000,0x0000000002f80000)]")
    time.sleep(0.02)""")

    time.sleep(0.002)
    print(r"siginfo: ExceptionCode=0xc0000005, reading address 0x000000004015b440")

    time.sleep(0.002)
    print(r"Registers:")
    time.sleep(0.002)
    print(r"RAX=0x000000003ee3d000, RBX=0x0000000039920000, RCX=0x0000000000155d50, RDX=0x000000000000c44c")
    time.sleep(0.002)
    print(r"RSP=0x0000000002f7dde0, RBP=0x000000003fc08220, RSI=0x000000004015b440, RDI=0x0000000005575400")
    time.sleep(0.002)
    print(r"R8 =0x0000000000155d50, R9 =0x000000000000c44c, R10=0x000000003fc08220, R11=0x0000000000000000")
    time.sleep(0.002)
    print(r"R12=0x0000000000000000, R13=0x0000000000000000, R14=0x0000000000000007, R15=0x000000003ee3d000")
    time.sleep(0.002)
    print(r"RIP=0x00000000377513ff, EFLAGS=0x0000000000010202")

    print(r"Top of Stack: (sp=0x0000000002f7dde0)")
    time.sleep(0.002)
    print(r"0x0000000002f7dde0:   00000000051001d0 0000000000155d50")
    time.sleep(0.002)
    print(r"0x0000000002f7ddf0:   000000000000c44c 0000000039920000")
    time.sleep(0.002)
    print(r"0x0000000002f7de00:   000000003fc08220 00007fff73f3744e")
    time.sleep(0.002)
    print(r"0x0000000002f7de10:   0000000039920000 000000003fc08220")
    time.sleep(0.002)
    print(r"0x0000000002f7de20:   000000000000c44c 0000000039920000")
    time.sleep(0.002)
    print(r"0x0000000002f7de30:   00c000000038234c 000000054dc46670")
    time.sleep(0.002)
    print(r"0x0000000002f7de40:   0000000000000007 000000003997bc78")
    time.sleep(0.002)
    print(r"0x0000000002f7de50:   0000000000f79000 000000018f7ab040")
    time.sleep(0.002)
    print(r"0x0000000002f7de60:   0000000039920000 0000000000000013")
    time.sleep(0.002)
    print(r"0x0000000002f7de70:   0000000000000000 00007fff73f3a0d7")
    time.sleep(0.002)
    print(r"0x0000000002f7de80:   000000000000000e 0000000000000000")
    time.sleep(0.002)
    print(r"0x0000000002f7de90:   000000054dc46670 0000000000000007")
    time.sleep(0.002)
    print(r"0x0000000002f7dea0:   0008000000892003 00c000000038234c")
    time.sleep(0.002)
    print(r"0x0000000002f7deb0:   0008000000892003 00c000000038234c")
    time.sleep(0.002)
    print(r"0x0000000002f7dec0:   0000000000000007 000000018f7ab040")
    time.sleep(0.002)
    print(r"0x0000000002f7ded0:   000000003fc08220 00007fff73f3a519 ")
    time.sleep(0.002)
    print(r"Instructions: (pc=0x00000000377513ff)")
    time.sleep(0.002)
    print(r"0x00000000377513df:   8b c8 49 8b d1 48 be 50 c7 97 39 00 00 00 00 48")
    time.sleep(0.002)
    print(r"0x00000000377513ef:   8b 36 48 8b 76 08 48 8b f9 48 c1 e7 06 48 03 f7")
    time.sleep(0.002)
    print(r"0x00000000377513ff:   8b 3e 8b 6e 04 89 38 89 68 04 8b 7e 08 89 78 08")
    time.sleep(0.002)
    print(r"0x000000003775140f:   48 be 50 c7 97 39 00 00 00 00 48 8b 36 48 8b 76 ")


    time.sleep(0.002)
    print(r"Register to memory mapping:")

    time.sleep(0.002)
    print(r"RAX=0x000000003ee3d000 is an unknown value")
    time.sleep(0.002)
    print(r"RBX=0x0000000039920000 is an unknown value")
    time.sleep(0.002)
    print(r"RCX=0x0000000000155d50 is an unknown value")
    time.sleep(0.002)
    print(r"RDX=0x000000000000c44c is an unknown value")
    time.sleep(0.002)
    print(r"RSP=0x0000000002f7dde0 is pointing into the stack for thread: 0x0000000002f82800")
    time.sleep(0.002)
    print(r"RBP=0x000000003fc08220 is an unknown value")
    time.sleep(0.002)
    print(r"RSI=0x000000004015b440 is an unknown value")
    time.sleep(0.002)
    print(r"RDI=0x0000000005575400 is at entry_point+4096 in (nmethod*)0x0000000005574150")
    time.sleep(0.002)
    print(r"R8 =0x0000000000155d50 is an unknown value")
    time.sleep(0.002)
    print(r"R9 =0x000000000000c44c is an unknown value")
    time.sleep(0.002)
    print(r"R10=0x000000003fc08220 is an unknown value")
    time.sleep(0.002)
    print(r"R11=0x0000000000000000 is an unknown value")
    time.sleep(0.002)
    print(r"R12=0x0000000000000000 is an unknown value")
    time.sleep(0.002)
    print(r"R13=0x0000000000000000 is an unknown value")
    time.sleep(0.002)
    print(r"R14=0x0000000000000007 is an unknown value")
    time.sleep(0.002)
    print(r"R15=0x000000003ee3d000 is an unknown value")


    print(r"""Stack: [0x0000000002e80000,0x0000000002f80000],  sp=0x0000000002f7dde0,  free space=1015k""")
    print(r"""Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)""")
    print(r"""C  0x00000000377513ff""")

    print(r"""Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)""")
    print(r"""J 20519  org.lwjgl.opengl.GL14C.nglMultiDrawArrays(IJJI)V (0 bytes) @ 0x000000000602fc8e [0x000000000602fc40+0x4e]""")
    print(r"""J 22284 C2 net.optifine.render.VboRegion.finishDraw()V (105 bytes) @ 0x00000000058e2a44 [0x00000000058e26e0+0x364]""")
    print(r"""J 23257 C2 dzw.a(Leag;Ldfj;DDD)V (1025 bytes) @ 0x000000000635f704 [0x000000000635f020+0x6e4]""")
    print(r"""J 23330 C1 dzw.a(Ldfj;FJZLdjh;Ldzr;Ldzx;Lb;)V (3741 bytes) @ 0x00000000062f86dc [0x00000000062f2dc0+0x591c]""")
    print(r"""J 22911 C2 dzr.a(FJLdfj;)V (854 bytes) @ 0x0000000006658228 [0x00000000066573a0+0xe88]""")
    print(r"""J 22544 C2 dzr.a(FJZ)V (1147 bytes) @ 0x0000000006552f24 [0x0000000006552220+0xd04]""")
    print(r"""J 22543 C2 djw.e(Z)V (946 bytes) @ 0x0000000005dfc2a8 [0x0000000005dfb280+0x1028]""")
    print(r"""j  djw.e()V+68""")
    print(r"""j  net.minecraft.client.main.Main.main([Ljava/lang/String;)V+1366v""")
    print(r"""v  ~StubRoutines::call_stub""")
    print(r"""j  sun.reflect.NativeMethodAccessorImpl.invoke0(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;+0""")
    print(r"""j  sun.reflect.NativeMethodAccessorImpl.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;+100""")
    print(r"""j  sun.reflect.DelegatingMethodAccessorImpl.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;+6v""")
    print(r"""j  java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;+56""")
    print(r"""j  net.minecraft.launchwrapper.Launch.launch([Ljava/lang/String;)V+661""")
    print(r"""j  net.minecraft.launchwrapper.Launch.main([Ljava/lang/String;)V+8""")
    print(r"""v  ~StubRoutines::call_stub""")

    print(r"""---------------  P R O C E S S  ---------------""")

    print(r"""Java Threads: ( => current thread )""")
    print(r"""  0x0000000037031000 JavaThread "IO-Worker-34" [_thread_blocked, id=33700, stack(0x000000004aaf0000,0x000000004abf0000)]""")
    time.sleep(0.02)
    print(r"""  0x0000000037033000 JavaThread "IO-Worker-33" [_thread_blocked, id=4556, stack(0x000000004d950000,0x000000004da50000)]""")
    time.sleep(0.02)
    print(r"""  0x000000003702e800 JavaThread "IO-Worker-32" [_thread_blocked, id=27776, stack(0x0000000046e00000,0x0000000046f00000)]""")
    time.sleep(0.02)
    print(r"""  0x0000000037029800 JavaThread "Worker-Main-31" daemon [_thread_blocked, id=30804, stack(0x00000000469c0000,0x0000000046ac0000)]""")
    time.sleep(0.02)
    print(r"""  0x0000000037026800 JavaThread "Worker-Main-30" daemon [_thread_blocked, id=7124, stack(0x0000000046460000,0x0000000046560000)]""")
    time.sleep(0.02)
    print(r"""  0x000000003702d000 JavaThread "Worker-Main-29" daemon [_thread_blocked, id=30948, stack(0x0000000043000000,0x0000000043100000)]""")
    time.sleep(0.02)
    print(r"""  0x000000003702b000 JavaThread "Worker-Main-28" daemon [_thread_blocked, id=18464, stack(0x000000003c750000,0x000000003c850000)]""")
    time.sleep(0.02)
    print(r"""  0x0000000037028800 JavaThread "Worker-Main-27" daemon [_thread_blocked, id=33140, stack(0x000000003c600000,0x000000003c700000)]""")
    time.sleep(0.02)
    print(r"""  0x0000000037025800 JavaThread "Worker-Main-26" daemon [_thread_blocked, id=9300, stack(0x0000000038b80000,0x0000000038c80000)]""")
    time.sleep(0.02)
    print(r"""  0x0000000037025000 JavaThread "Worker-Main-25" daemon [_thread_blocked, id=21564, stack(0x0000000035ab0000,0x0000000035bb0000)]""")
    time.sleep(0.02)
    print(r"""  0x0000000038199000 JavaThread "Sound engine" daemon [_thread_blocked, id=11904, stack(0x00000000dde00000,0x00000000ddf00000)]""")
    time.sleep(0.02)
    print(r"""  0x000000003819a800 JavaThread "Netty Server IO #1" daemon [_thread_in_native, id=26920, stack(0x00000000ddd00000,0x00000000dde00000)]""")
    time.sleep(0.02)
    print(r"""  0x000000003702c800 JavaThread "Netty Local Client IO #0" daemon [_thread_blocked, id=21944, stack(0x0000000043400000,0x0000000043500000)]""")
    time.sleep(0.02)
    print(r"""  0x000000003702b800 JavaThread "Netty Server IO #0" daemon [_thread_in_native, id=28872, stack(0x00000000ddc00000,0x00000000ddd00000)]""")
    time.sleep(0.02)
    print(r"""  0x0000000037032800 JavaThread "ObjectCleanerThread" daemon [_thread_blocked, id=32808, stack(0x00000000dd2b0000,0x00000000dd3b0000)]""")
    time.sleep(0.02)
    print(r"""  0x0000000037030000 JavaThread "Server thread" [_thread_blocked, id=18896, stack(0x00000000dc840000,0x00000000dc940000)]""")
    time.sleep(0.02)
    print(r"""  0x000000003702f800 JavaThread "Snooper Timer" daemon [_thread_blocked, id=12072, stack(0x0000000043f10000,0x0000000044010000)]""")
    time.sleep(0.02)
    print(r"""  0x000000003702e000 JavaThread "Java2D Disposer" daemon [_thread_blocked, id=2560, stack(0x000000005b430000,0x000000005b530000)]""")
    time.sleep(0.02)
    print(r"""  0x0000000037024000 JavaThread "pool-3-thread-3" [_thread_blocked, id=25656, stack(0x000000005b9c0000,0x000000005bac0000)]""")
    time.sleep(0.02)
    print(r"""  0x000000003702a000 JavaThread "pool-3-thread-2" [_thread_blocked, id=23736, stack(0x000000005b8c0000,0x000000005b9c0000)]""")
    time.sleep(0.02)
    print(r"""  0x0000000037028000 JavaThread "pool-3-thread-1" [_thread_blocked, id=31080, stack(0x0000000044410000,0x0000000044510000)]""")
    time.sleep(0.02)
    print(r"""  0x000000003819c000 JavaThread "Narrator" [_thread_blocked, id=13748, stack(0x0000000043dc0000,0x0000000043ec0000)]""")
    time.sleep(0.02)
    print(r"""  0x0000000038198000 JavaThread "Snooper Timer" daemon [_thread_blocked, id=4188, stack(0x00000000396e0000,0x00000000397e0000)]""")
    time.sleep(0.02)
    print(r"""  0x000000003552e800 JavaThread "Timer hack thread" daemon [_thread_blocked, id=22456, stack(0x0000000039180000,0x0000000039280000)]""")
    time.sleep(0.02)
    print(r"""  0x0000000031002000 JavaThread "Service Thread" daemon [_thread_blocked, id=23712, stack(0x00000000322d0000,0x00000000323d0000)]""")
    time.sleep(0.02)
    print(r"""  0x0000000030fe9000 JavaThread "C1 CompilerThread3" daemon [_thread_blocked, id=30716, stack(0x00000000321d0000,0x00000000322d0000)]""")
    time.sleep(0.02)
    print(r"""  0x0000000030fe8000 JavaThread "C2 CompilerThread2" daemon [_thread_blocked, id=27028, stack(0x00000000320d0000,0x00000000321d0000)]""")
    time.sleep(0.02)
    print(r"""  0x0000000030fdd800 JavaThread "C2 CompilerThread1" daemon [_thread_blocked, id=27892, stack(0x0000000031fd0000,0x00000000320d0000)]""")
    time.sleep(0.02)
    print(r"""  0x0000000030fdb000 JavaThread "C2 CompilerThread0" daemon [_thread_blocked, id=3140, stack(0x0000000031ed0000,0x0000000031fd0000)]""")
    time.sleep(0.02)
    print(r"""  0x0000000030fd7000 JavaThread "Attach Listener" daemon [_thread_blocked, id=3408, stack(0x0000000031dd0000,0x0000000031ed0000)]""")
    time.sleep(0.02)
    print(r"""  0x0000000030fd6800 JavaThread "Signal Dispatcher" daemon [_thread_blocked, id=5236, stack(0x0000000031cd0000,0x0000000031dd0000)]""")
    time.sleep(0.02)
    print(r"""  0x0000000030fd5800 JavaThread "Surrogate Locker Thread (Concurrent GC)" daemon [_thread_blocked, id=8772, stack(0x0000000031bd0000,0x0000000031cd0000)]""")
    time.sleep(0.02)
    print(r"""  0x0000000030fc3800 JavaThread "Finalizer" daemon [_thread_blocked, id=13240, stack(0x0000000031ad0000,0x0000000031bd0000)]""")
    time.sleep(0.02)
    print(r"""  0x0000000030fbd000 JavaThread "Reference Handler" daemon [_thread_blocked, id=33356, stack(0x00000000319d0000,0x0000000031ad0000)]""")
    time.sleep(0.02)
    print(r"""=>0x0000000002f82800 JavaThread "Render thread" [_thread_in_native, id=30616, stack(0x0000000002e80000,0x0000000002f80000)]""")
    time.sleep(0.02)

    print(r"""Other Threads:""")
    print(r"""  0x0000000030fb8000 VMThread [stack: 0x00000000318d0000,0x00000000319d0000] [id=30940]""")
    print(r"""  0x0000000031085800 WatcherThread [stack: 0x00000000323d0000,0x00000000324d0000] [id=6588]""")

    print(r"""VM state:not at safepoint (normal execution)""")

    print(r"""VM Mutex/Monitor currently owned by a thread: None""")

    print(r"""Heap:""")
    print(r"""  garbage-first heap   total 10485760K, used 1815515K [0x0000000540000000, 0x0000000542000a00, 0x00000007c0000000)""")
    print(r"""  region size 32768K, 40 young (1310720K), 7 survivors (229376K)""")
    print(r"""  Metaspace       used 82058K, capacity 92456K, committed 92724K, reserved 1128448K""")
    print(r"""  class space    used 11199K, capacity 13545K, committed 13672K, reserved 1048576K""")



    print("Heap Regions: (Y=young(eden), SU=young(survivor), HS=humongous(starts), HC=humongous(continues), CS=collection set, F=free, TS=gc time stamp, PTAMS=previous top-at-mark-start, NTAMS=next top-at-mark-start)")
    time.sleep(0.002)
    print(r"AC   0  O    TS     0 PTAMS 0x0000000542000000 NTAMS 0x0000000542000000 space 32768K, 100% used [0x0000000540000000, 0x0000000542000000)")
    time.sleep(0.002)
    print(r"AC   0  O    TS     0 PTAMS 0x0000000544000000 NTAMS 0x0000000544000000 space 32768K, 100% used [0x0000000542000000, 0x0000000544000000)")
    time.sleep(0.002)
    print(r"AC   0  O    TS     0 PTAMS 0x0000000546000000 NTAMS 0x0000000546000000 space 32768K, 100% used [0x0000000544000000, 0x0000000546000000)")
    time.sleep(0.002)
    print(r"AC   0  O    TS     0 PTAMS 0x0000000548000000 NTAMS 0x0000000548000000 space 32768K, 100% used [0x0000000546000000, 0x0000000548000000)")
    time.sleep(0.002)
    print(r"AC   0  O    TS     0 PTAMS 0x000000054a000000 NTAMS 0x000000054a000000 space 32768K, 100% used [0x0000000548000000, 0x000000054a000000)")
    time.sleep(0.002)
    print(r"AC   0  O    TS     0 PTAMS 0x000000054c000000 NTAMS 0x000000054c000000 space 32768K, 100% used [0x000000054a000000, 0x000000054c000000)")
    time.sleep(0.002)
    print(r"AC   0  O    TS     0 PTAMS 0x000000054e000000 NTAMS 0x000000054e000000 space 32768K, 100% used [0x000000054c000000, 0x000000054e000000)")
    time.sleep(0.002)
    print(r"AC   0  O    TS     0 PTAMS 0x0000000550000000 NTAMS 0x0000000550000000 space 32768K, 100% used [0x000000054e000000, 0x0000000550000000)")
    time.sleep(0.002)
    print(r"AC   0  O    TS     0 PTAMS 0x0000000552000000 NTAMS 0x0000000552000000 space 32768K, 100% used [0x0000000550000000, 0x0000000552000000)")
    time.sleep(0.002)
    print(r"AC   0  O    TS     0 PTAMS 0x0000000554000000 NTAMS 0x0000000554000000 space 32768K, 100% used [0x0000000552000000, 0x0000000554000000)")
    time.sleep(0.002)
    print(r"AC   0  O    TS     0 PTAMS 0x0000000556000000 NTAMS 0x0000000556000000 space 32768K, 100% used [0x0000000554000000, 0x0000000556000000)")
    time.sleep(0.002)
    print(r"AC   0  O    TS     1 PTAMS 0x0000000557639600 NTAMS 0x0000000557639600 space 32768K, 100% used [0x0000000556000000, 0x0000000558000000)")
    time.sleep(0.002)
    print(r"AC   0  O    TS     1 PTAMS 0x0000000558000000 NTAMS 0x0000000558000000 space 32768K, 100% used [0x0000000558000000, 0x000000055a000000)")
    time.sleep(0.002)
    print(r"AC   0  O    TS     1 PTAMS 0x000000055a000000 NTAMS 0x000000055a000000 space 32768K, 100% used [0x000000055a000000, 0x000000055c000000)")
    time.sleep(0.002)
    print(r"AC   0  O    TS     3 PTAMS 0x000000055c000000 NTAMS 0x000000055c000000 space 32768K, 100% used [0x000000055c000000, 0x000000055e000000)")
    time.sleep(0.002)
    print(r"AC   0  O    TS     3 PTAMS 0x000000055e000000 NTAMS 0x000000055e000000 space 32768K, 100% used [0x000000055e000000, 0x0000000560000000)")
    time.sleep(0.002)
    print(r"AC   0  O    TS     3 PTAMS 0x0000000560000000 NTAMS 0x0000000560000000 space 32768K,  44% used [0x0000000560000000, 0x0000000562000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000562000000 NTAMS 0x0000000562000000 space 32768K,   0% used [0x0000000562000000, 0x0000000564000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000564000000 NTAMS 0x0000000564000000 space 32768K,   0% used [0x0000000564000000, 0x0000000566000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000566000000 NTAMS 0x0000000566000000 space 32768K,   0% used [0x0000000566000000, 0x0000000568000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000568000000 NTAMS 0x0000000568000000 space 32768K,   0% used [0x0000000568000000, 0x000000056a000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000056a000000 NTAMS 0x000000056a000000 space 32768K,   0% used [0x000000056a000000, 0x000000056c000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000056c000000 NTAMS 0x000000056c000000 space 32768K,   0% used [0x000000056c000000, 0x000000056e000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000056e000000 NTAMS 0x000000056e000000 space 32768K,   0% used [0x000000056e000000, 0x0000000570000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000570000000 NTAMS 0x0000000570000000 space 32768K,   0% used [0x0000000570000000, 0x0000000572000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000572000000 NTAMS 0x0000000572000000 space 32768K,   0% used [0x0000000572000000, 0x0000000574000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000574000000 NTAMS 0x0000000574000000 space 32768K,   0% used [0x0000000574000000, 0x0000000576000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000576000000 NTAMS 0x0000000576000000 space 32768K,   0% used [0x0000000576000000, 0x0000000578000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000578000000 NTAMS 0x0000000578000000 space 32768K,   0% used [0x0000000578000000, 0x000000057a000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000057a000000 NTAMS 0x000000057a000000 space 32768K,   0% used [0x000000057a000000, 0x000000057c000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000057c000000 NTAMS 0x000000057c000000 space 32768K,   0% used [0x000000057c000000, 0x000000057e000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000057e000000 NTAMS 0x000000057e000000 space 32768K,   0% used [0x000000057e000000, 0x0000000580000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000580000000 NTAMS 0x0000000580000000 space 32768K,   0% used [0x0000000580000000, 0x0000000582000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000582000000 NTAMS 0x0000000582000000 space 32768K,   0% used [0x0000000582000000, 0x0000000584000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000584000000 NTAMS 0x0000000584000000 space 32768K,   0% used [0x0000000584000000, 0x0000000586000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000586000000 NTAMS 0x0000000586000000 space 32768K,   0% used [0x0000000586000000, 0x0000000588000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000588000000 NTAMS 0x0000000588000000 space 32768K,   0% used [0x0000000588000000, 0x000000058a000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000058a000000 NTAMS 0x000000058a000000 space 32768K,   0% used [0x000000058a000000, 0x000000058c000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000058c000000 NTAMS 0x000000058c000000 space 32768K,   0% used [0x000000058c000000, 0x000000058e000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000058e000000 NTAMS 0x000000058e000000 space 32768K,   0% used [0x000000058e000000, 0x0000000590000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000590000000 NTAMS 0x0000000590000000 space 32768K,   0% used [0x0000000590000000, 0x0000000592000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000592000000 NTAMS 0x0000000592000000 space 32768K,   0% used [0x0000000592000000, 0x0000000594000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000594000000 NTAMS 0x0000000594000000 space 32768K,   0% used [0x0000000594000000, 0x0000000596000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000596000000 NTAMS 0x0000000596000000 space 32768K,   0% used [0x0000000596000000, 0x0000000598000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000598000000 NTAMS 0x0000000598000000 space 32768K,   0% used [0x0000000598000000, 0x000000059a000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000059a000000 NTAMS 0x000000059a000000 space 32768K,   0% used [0x000000059a000000, 0x000000059c000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000059c000000 NTAMS 0x000000059c000000 space 32768K,   0% used [0x000000059c000000, 0x000000059e000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000059e000000 NTAMS 0x000000059e000000 space 32768K,   0% used [0x000000059e000000, 0x00000005a0000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005a0000000 NTAMS 0x00000005a0000000 space 32768K,   0% used [0x00000005a0000000, 0x00000005a2000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005a2000000 NTAMS 0x00000005a2000000 space 32768K,   0% used [0x00000005a2000000, 0x00000005a4000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005a4000000 NTAMS 0x00000005a4000000 space 32768K,   0% used [0x00000005a4000000, 0x00000005a6000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005a6000000 NTAMS 0x00000005a6000000 space 32768K,   0% used [0x00000005a6000000, 0x00000005a8000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005a8000000 NTAMS 0x00000005a8000000 space 32768K,   0% used [0x00000005a8000000, 0x00000005aa000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005aa000000 NTAMS 0x00000005aa000000 space 32768K,   0% used [0x00000005aa000000, 0x00000005ac000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005ac000000 NTAMS 0x00000005ac000000 space 32768K,   0% used [0x00000005ac000000, 0x00000005ae000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005ae000000 NTAMS 0x00000005ae000000 space 32768K,   0% used [0x00000005ae000000, 0x00000005b0000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005b0000000 NTAMS 0x00000005b0000000 space 32768K,   0% used [0x00000005b0000000, 0x00000005b2000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005b2000000 NTAMS 0x00000005b2000000 space 32768K,   0% used [0x00000005b2000000, 0x00000005b4000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005b4000000 NTAMS 0x00000005b4000000 space 32768K,   0% used [0x00000005b4000000, 0x00000005b6000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005b6000000 NTAMS 0x00000005b6000000 space 32768K,   0% used [0x00000005b6000000, 0x00000005b8000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005b8000000 NTAMS 0x00000005b8000000 space 32768K,   0% used [0x00000005b8000000, 0x00000005ba000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005ba000000 NTAMS 0x00000005ba000000 space 32768K,   0% used [0x00000005ba000000, 0x00000005bc000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005bc000000 NTAMS 0x00000005bc000000 space 32768K,   0% used [0x00000005bc000000, 0x00000005be000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005be000000 NTAMS 0x00000005be000000 space 32768K,   0% used [0x00000005be000000, 0x00000005c0000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005c0000000 NTAMS 0x00000005c0000000 space 32768K,   0% used [0x00000005c0000000, 0x00000005c2000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005c2000000 NTAMS 0x00000005c2000000 space 32768K,   0% used [0x00000005c2000000, 0x00000005c4000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005c4000000 NTAMS 0x00000005c4000000 space 32768K,   0% used [0x00000005c4000000, 0x00000005c6000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005c6000000 NTAMS 0x00000005c6000000 space 32768K,   0% used [0x00000005c6000000, 0x00000005c8000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005c8000000 NTAMS 0x00000005c8000000 space 32768K,   0% used [0x00000005c8000000, 0x00000005ca000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005ca000000 NTAMS 0x00000005ca000000 space 32768K,   0% used [0x00000005ca000000, 0x00000005cc000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005cc000000 NTAMS 0x00000005cc000000 space 32768K,   0% used [0x00000005cc000000, 0x00000005ce000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005ce000000 NTAMS 0x00000005ce000000 space 32768K,   0% used [0x00000005ce000000, 0x00000005d0000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005d0000000 NTAMS 0x00000005d0000000 space 32768K,   0% used [0x00000005d0000000, 0x00000005d2000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005d2000000 NTAMS 0x00000005d2000000 space 32768K,   0% used [0x00000005d2000000, 0x00000005d4000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005d4000000 NTAMS 0x00000005d4000000 space 32768K,   0% used [0x00000005d4000000, 0x00000005d6000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005d6000000 NTAMS 0x00000005d6000000 space 32768K,   0% used [0x00000005d6000000, 0x00000005d8000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005d8000000 NTAMS 0x00000005d8000000 space 32768K,   0% used [0x00000005d8000000, 0x00000005da000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005da000000 NTAMS 0x00000005da000000 space 32768K,   0% used [0x00000005da000000, 0x00000005dc000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005dc000000 NTAMS 0x00000005dc000000 space 32768K,   0% used [0x00000005dc000000, 0x00000005de000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005de000000 NTAMS 0x00000005de000000 space 32768K,   0% used [0x00000005de000000, 0x00000005e0000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005e0000000 NTAMS 0x00000005e0000000 space 32768K,   0% used [0x00000005e0000000, 0x00000005e2000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005e2000000 NTAMS 0x00000005e2000000 space 32768K,   0% used [0x00000005e2000000, 0x00000005e4000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005e4000000 NTAMS 0x00000005e4000000 space 32768K,   0% used [0x00000005e4000000, 0x00000005e6000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005e6000000 NTAMS 0x00000005e6000000 space 32768K,   0% used [0x00000005e6000000, 0x00000005e8000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005e8000000 NTAMS 0x00000005e8000000 space 32768K,   0% used [0x00000005e8000000, 0x00000005ea000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005ea000000 NTAMS 0x00000005ea000000 space 32768K,   0% used [0x00000005ea000000, 0x00000005ec000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005ec000000 NTAMS 0x00000005ec000000 space 32768K,   0% used [0x00000005ec000000, 0x00000005ee000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005ee000000 NTAMS 0x00000005ee000000 space 32768K,   0% used [0x00000005ee000000, 0x00000005f0000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005f0000000 NTAMS 0x00000005f0000000 space 32768K,   0% used [0x00000005f0000000, 0x00000005f2000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005f2000000 NTAMS 0x00000005f2000000 space 32768K,   0% used [0x00000005f2000000, 0x00000005f4000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005f4000000 NTAMS 0x00000005f4000000 space 32768K,   0% used [0x00000005f4000000, 0x00000005f6000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005f6000000 NTAMS 0x00000005f6000000 space 32768K,   0% used [0x00000005f6000000, 0x00000005f8000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005f8000000 NTAMS 0x00000005f8000000 space 32768K,   0% used [0x00000005f8000000, 0x00000005fa000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005fa000000 NTAMS 0x00000005fa000000 space 32768K,   0% used [0x00000005fa000000, 0x00000005fc000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005fc000000 NTAMS 0x00000005fc000000 space 32768K,   0% used [0x00000005fc000000, 0x00000005fe000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000005fe000000 NTAMS 0x00000005fe000000 space 32768K,   0% used [0x00000005fe000000, 0x0000000600000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000600000000 NTAMS 0x0000000600000000 space 32768K,   0% used [0x0000000600000000, 0x0000000602000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000602000000 NTAMS 0x0000000602000000 space 32768K,   0% used [0x0000000602000000, 0x0000000604000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000604000000 NTAMS 0x0000000604000000 space 32768K,   0% used [0x0000000604000000, 0x0000000606000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000606000000 NTAMS 0x0000000606000000 space 32768K,   0% used [0x0000000606000000, 0x0000000608000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000608000000 NTAMS 0x0000000608000000 space 32768K,   0% used [0x0000000608000000, 0x000000060a000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000060a000000 NTAMS 0x000000060a000000 space 32768K,   0% used [0x000000060a000000, 0x000000060c000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000060c000000 NTAMS 0x000000060c000000 space 32768K,   0% used [0x000000060c000000, 0x000000060e000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000060e000000 NTAMS 0x000000060e000000 space 32768K,   0% used [0x000000060e000000, 0x0000000610000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000610000000 NTAMS 0x0000000610000000 space 32768K,   0% used [0x0000000610000000, 0x0000000612000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000612000000 NTAMS 0x0000000612000000 space 32768K,   0% used [0x0000000612000000, 0x0000000614000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000614000000 NTAMS 0x0000000614000000 space 32768K,   0% used [0x0000000614000000, 0x0000000616000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000616000000 NTAMS 0x0000000616000000 space 32768K,   0% used [0x0000000616000000, 0x0000000618000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000618000000 NTAMS 0x0000000618000000 space 32768K,   0% used [0x0000000618000000, 0x000000061a000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000061a000000 NTAMS 0x000000061a000000 space 32768K,   0% used [0x000000061a000000, 0x000000061c000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000061c000000 NTAMS 0x000000061c000000 space 32768K,   0% used [0x000000061c000000, 0x000000061e000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000061e000000 NTAMS 0x000000061e000000 space 32768K,   0% used [0x000000061e000000, 0x0000000620000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000620000000 NTAMS 0x0000000620000000 space 32768K,   0% used [0x0000000620000000, 0x0000000622000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000622000000 NTAMS 0x0000000622000000 space 32768K,   0% used [0x0000000622000000, 0x0000000624000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000624000000 NTAMS 0x0000000624000000 space 32768K,   0% used [0x0000000624000000, 0x0000000626000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000626000000 NTAMS 0x0000000626000000 space 32768K,   0% used [0x0000000626000000, 0x0000000628000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000628000000 NTAMS 0x0000000628000000 space 32768K,   0% used [0x0000000628000000, 0x000000062a000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000062a000000 NTAMS 0x000000062a000000 space 32768K,   0% used [0x000000062a000000, 0x000000062c000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000062c000000 NTAMS 0x000000062c000000 space 32768K,   0% used [0x000000062c000000, 0x000000062e000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000062e000000 NTAMS 0x000000062e000000 space 32768K,   0% used [0x000000062e000000, 0x0000000630000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000630000000 NTAMS 0x0000000630000000 space 32768K,   0% used [0x0000000630000000, 0x0000000632000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000632000000 NTAMS 0x0000000632000000 space 32768K,   0% used [0x0000000632000000, 0x0000000634000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000634000000 NTAMS 0x0000000634000000 space 32768K,   0% used [0x0000000634000000, 0x0000000636000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000636000000 NTAMS 0x0000000636000000 space 32768K,   0% used [0x0000000636000000, 0x0000000638000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000638000000 NTAMS 0x0000000638000000 space 32768K,   0% used [0x0000000638000000, 0x000000063a000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000063a000000 NTAMS 0x000000063a000000 space 32768K,   0% used [0x000000063a000000, 0x000000063c000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000063c000000 NTAMS 0x000000063c000000 space 32768K,   0% used [0x000000063c000000, 0x000000063e000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000063e000000 NTAMS 0x000000063e000000 space 32768K,   0% used [0x000000063e000000, 0x0000000640000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000640000000 NTAMS 0x0000000640000000 space 32768K,   0% used [0x0000000640000000, 0x0000000642000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000642000000 NTAMS 0x0000000642000000 space 32768K,   0% used [0x0000000642000000, 0x0000000644000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000644000000 NTAMS 0x0000000644000000 space 32768K,   0% used [0x0000000644000000, 0x0000000646000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000646000000 NTAMS 0x0000000646000000 space 32768K,   0% used [0x0000000646000000, 0x0000000648000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000648000000 NTAMS 0x0000000648000000 space 32768K,   0% used [0x0000000648000000, 0x000000064a000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000064a000000 NTAMS 0x000000064a000000 space 32768K,   0% used [0x000000064a000000, 0x000000064c000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000064c000000 NTAMS 0x000000064c000000 space 32768K,   0% used [0x000000064c000000, 0x000000064e000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000064e000000 NTAMS 0x000000064e000000 space 32768K,   0% used [0x000000064e000000, 0x0000000650000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000650000000 NTAMS 0x0000000650000000 space 32768K,   0% used [0x0000000650000000, 0x0000000652000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000652000000 NTAMS 0x0000000652000000 space 32768K,   0% used [0x0000000652000000, 0x0000000654000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000654000000 NTAMS 0x0000000654000000 space 32768K,   0% used [0x0000000654000000, 0x0000000656000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000656000000 NTAMS 0x0000000656000000 space 32768K,   0% used [0x0000000656000000, 0x0000000658000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000658000000 NTAMS 0x0000000658000000 space 32768K,   0% used [0x0000000658000000, 0x000000065a000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000065a000000 NTAMS 0x000000065a000000 space 32768K,   0% used [0x000000065a000000, 0x000000065c000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000065c000000 NTAMS 0x000000065c000000 space 32768K,   0% used [0x000000065c000000, 0x000000065e000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000065e000000 NTAMS 0x000000065e000000 space 32768K,   0% used [0x000000065e000000, 0x0000000660000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000660000000 NTAMS 0x0000000660000000 space 32768K,   0% used [0x0000000660000000, 0x0000000662000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000662000000 NTAMS 0x0000000662000000 space 32768K,   0% used [0x0000000662000000, 0x0000000664000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000664000000 NTAMS 0x0000000664000000 space 32768K,   0% used [0x0000000664000000, 0x0000000666000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000666000000 NTAMS 0x0000000666000000 space 32768K,   0% used [0x0000000666000000, 0x0000000668000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000668000000 NTAMS 0x0000000668000000 space 32768K,   0% used [0x0000000668000000, 0x000000066a000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000066a000000 NTAMS 0x000000066a000000 space 32768K,   0% used [0x000000066a000000, 0x000000066c000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000066c000000 NTAMS 0x000000066c000000 space 32768K,   0% used [0x000000066c000000, 0x000000066e000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000066e000000 NTAMS 0x000000066e000000 space 32768K,   0% used [0x000000066e000000, 0x0000000670000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000670000000 NTAMS 0x0000000670000000 space 32768K,   0% used [0x0000000670000000, 0x0000000672000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000672000000 NTAMS 0x0000000672000000 space 32768K,   0% used [0x0000000672000000, 0x0000000674000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000674000000 NTAMS 0x0000000674000000 space 32768K,   0% used [0x0000000674000000, 0x0000000676000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000676000000 NTAMS 0x0000000676000000 space 32768K,   0% used [0x0000000676000000, 0x0000000678000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000678000000 NTAMS 0x0000000678000000 space 32768K,   0% used [0x0000000678000000, 0x000000067a000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000067a000000 NTAMS 0x000000067a000000 space 32768K,   0% used [0x000000067a000000, 0x000000067c000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000067c000000 NTAMS 0x000000067c000000 space 32768K,   0% used [0x000000067c000000, 0x000000067e000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000067e000000 NTAMS 0x000000067e000000 space 32768K,   0% used [0x000000067e000000, 0x0000000680000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000680000000 NTAMS 0x0000000680000000 space 32768K,   0% used [0x0000000680000000, 0x0000000682000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000682000000 NTAMS 0x0000000682000000 space 32768K,   0% used [0x0000000682000000, 0x0000000684000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000684000000 NTAMS 0x0000000684000000 space 32768K,   0% used [0x0000000684000000, 0x0000000686000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000686000000 NTAMS 0x0000000686000000 space 32768K,   0% used [0x0000000686000000, 0x0000000688000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000688000000 NTAMS 0x0000000688000000 space 32768K,   0% used [0x0000000688000000, 0x000000068a000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000068a000000 NTAMS 0x000000068a000000 space 32768K,   0% used [0x000000068a000000, 0x000000068c000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000068c000000 NTAMS 0x000000068c000000 space 32768K,   0% used [0x000000068c000000, 0x000000068e000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000068e000000 NTAMS 0x000000068e000000 space 32768K,   0% used [0x000000068e000000, 0x0000000690000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000690000000 NTAMS 0x0000000690000000 space 32768K,   0% used [0x0000000690000000, 0x0000000692000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000692000000 NTAMS 0x0000000692000000 space 32768K,   0% used [0x0000000692000000, 0x0000000694000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000694000000 NTAMS 0x0000000694000000 space 32768K,   0% used [0x0000000694000000, 0x0000000696000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000696000000 NTAMS 0x0000000696000000 space 32768K,   0% used [0x0000000696000000, 0x0000000698000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000698000000 NTAMS 0x0000000698000000 space 32768K,   0% used [0x0000000698000000, 0x000000069a000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000069a000000 NTAMS 0x000000069a000000 space 32768K,   0% used [0x000000069a000000, 0x000000069c000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000069c000000 NTAMS 0x000000069c000000 space 32768K,   0% used [0x000000069c000000, 0x000000069e000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000069e000000 NTAMS 0x000000069e000000 space 32768K,   0% used [0x000000069e000000, 0x00000006a0000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006a0000000 NTAMS 0x00000006a0000000 space 32768K,   0% used [0x00000006a0000000, 0x00000006a2000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006a2000000 NTAMS 0x00000006a2000000 space 32768K,   0% used [0x00000006a2000000, 0x00000006a4000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006a4000000 NTAMS 0x00000006a4000000 space 32768K,   0% used [0x00000006a4000000, 0x00000006a6000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006a6000000 NTAMS 0x00000006a6000000 space 32768K,   0% used [0x00000006a6000000, 0x00000006a8000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006a8000000 NTAMS 0x00000006a8000000 space 32768K,   0% used [0x00000006a8000000, 0x00000006aa000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006aa000000 NTAMS 0x00000006aa000000 space 32768K,   0% used [0x00000006aa000000, 0x00000006ac000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006ac000000 NTAMS 0x00000006ac000000 space 32768K,   0% used [0x00000006ac000000, 0x00000006ae000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006ae000000 NTAMS 0x00000006ae000000 space 32768K,   0% used [0x00000006ae000000, 0x00000006b0000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006b0000000 NTAMS 0x00000006b0000000 space 32768K,   0% used [0x00000006b0000000, 0x00000006b2000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006b2000000 NTAMS 0x00000006b2000000 space 32768K,   0% used [0x00000006b2000000, 0x00000006b4000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006b4000000 NTAMS 0x00000006b4000000 space 32768K,   0% used [0x00000006b4000000, 0x00000006b6000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006b6000000 NTAMS 0x00000006b6000000 space 32768K,   0% used [0x00000006b6000000, 0x00000006b8000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006b8000000 NTAMS 0x00000006b8000000 space 32768K,   0% used [0x00000006b8000000, 0x00000006ba000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006ba000000 NTAMS 0x00000006ba000000 space 32768K,   0% used [0x00000006ba000000, 0x00000006bc000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006bc000000 NTAMS 0x00000006bc000000 space 32768K,   0% used [0x00000006bc000000, 0x00000006be000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006be000000 NTAMS 0x00000006be000000 space 32768K,   0% used [0x00000006be000000, 0x00000006c0000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006c0000000 NTAMS 0x00000006c0000000 space 32768K,   0% used [0x00000006c0000000, 0x00000006c2000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006c2000000 NTAMS 0x00000006c2000000 space 32768K,   0% used [0x00000006c2000000, 0x00000006c4000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006c4000000 NTAMS 0x00000006c4000000 space 32768K,   0% used [0x00000006c4000000, 0x00000006c6000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006c6000000 NTAMS 0x00000006c6000000 space 32768K,   0% used [0x00000006c6000000, 0x00000006c8000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006c8000000 NTAMS 0x00000006c8000000 space 32768K,   0% used [0x00000006c8000000, 0x00000006ca000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006ca000000 NTAMS 0x00000006ca000000 space 32768K,   0% used [0x00000006ca000000, 0x00000006cc000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006cc000000 NTAMS 0x00000006cc000000 space 32768K,   0% used [0x00000006cc000000, 0x00000006ce000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006ce000000 NTAMS 0x00000006ce000000 space 32768K,   0% used [0x00000006ce000000, 0x00000006d0000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006d0000000 NTAMS 0x00000006d0000000 space 32768K,   0% used [0x00000006d0000000, 0x00000006d2000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006d2000000 NTAMS 0x00000006d2000000 space 32768K,   0% used [0x00000006d2000000, 0x00000006d4000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006d4000000 NTAMS 0x00000006d4000000 space 32768K,   0% used [0x00000006d4000000, 0x00000006d6000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006d6000000 NTAMS 0x00000006d6000000 space 32768K,   0% used [0x00000006d6000000, 0x00000006d8000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006d8000000 NTAMS 0x00000006d8000000 space 32768K,   0% used [0x00000006d8000000, 0x00000006da000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006da000000 NTAMS 0x00000006da000000 space 32768K,   0% used [0x00000006da000000, 0x00000006dc000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006dc000000 NTAMS 0x00000006dc000000 space 32768K,   0% used [0x00000006dc000000, 0x00000006de000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006de000000 NTAMS 0x00000006de000000 space 32768K,   0% used [0x00000006de000000, 0x00000006e0000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006e0000000 NTAMS 0x00000006e0000000 space 32768K,   0% used [0x00000006e0000000, 0x00000006e2000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006e2000000 NTAMS 0x00000006e2000000 space 32768K,   0% used [0x00000006e2000000, 0x00000006e4000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006e4000000 NTAMS 0x00000006e4000000 space 32768K,   0% used [0x00000006e4000000, 0x00000006e6000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006e6000000 NTAMS 0x00000006e6000000 space 32768K,   0% used [0x00000006e6000000, 0x00000006e8000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006e8000000 NTAMS 0x00000006e8000000 space 32768K,   0% used [0x00000006e8000000, 0x00000006ea000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006ea000000 NTAMS 0x00000006ea000000 space 32768K,   0% used [0x00000006ea000000, 0x00000006ec000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006ec000000 NTAMS 0x00000006ec000000 space 32768K,   0% used [0x00000006ec000000, 0x00000006ee000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006ee000000 NTAMS 0x00000006ee000000 space 32768K,   0% used [0x00000006ee000000, 0x00000006f0000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006f0000000 NTAMS 0x00000006f0000000 space 32768K,   0% used [0x00000006f0000000, 0x00000006f2000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006f2000000 NTAMS 0x00000006f2000000 space 32768K,   0% used [0x00000006f2000000, 0x00000006f4000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006f4000000 NTAMS 0x00000006f4000000 space 32768K,   0% used [0x00000006f4000000, 0x00000006f6000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006f6000000 NTAMS 0x00000006f6000000 space 32768K,   0% used [0x00000006f6000000, 0x00000006f8000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006f8000000 NTAMS 0x00000006f8000000 space 32768K,   0% used [0x00000006f8000000, 0x00000006fa000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006fa000000 NTAMS 0x00000006fa000000 space 32768K,   0% used [0x00000006fa000000, 0x00000006fc000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006fc000000 NTAMS 0x00000006fc000000 space 32768K,   0% used [0x00000006fc000000, 0x00000006fe000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x00000006fe000000 NTAMS 0x00000006fe000000 space 32768K,   0% used [0x00000006fe000000, 0x0000000700000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000700000000 NTAMS 0x0000000700000000 space 32768K,   0% used [0x0000000700000000, 0x0000000702000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000702000000 NTAMS 0x0000000702000000 space 32768K,   0% used [0x0000000702000000, 0x0000000704000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000704000000 NTAMS 0x0000000704000000 space 32768K,   0% used [0x0000000704000000, 0x0000000706000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000706000000 NTAMS 0x0000000706000000 space 32768K,   0% used [0x0000000706000000, 0x0000000708000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000708000000 NTAMS 0x0000000708000000 space 32768K,   0% used [0x0000000708000000, 0x000000070a000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000070a000000 NTAMS 0x000000070a000000 space 32768K,   0% used [0x000000070a000000, 0x000000070c000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000070c000000 NTAMS 0x000000070c000000 space 32768K,   0% used [0x000000070c000000, 0x000000070e000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000070e000000 NTAMS 0x000000070e000000 space 32768K,   0% used [0x000000070e000000, 0x0000000710000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000710000000 NTAMS 0x0000000710000000 space 32768K,   0% used [0x0000000710000000, 0x0000000712000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000712000000 NTAMS 0x0000000712000000 space 32768K,   0% used [0x0000000712000000, 0x0000000714000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000714000000 NTAMS 0x0000000714000000 space 32768K,   0% used [0x0000000714000000, 0x0000000716000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000716000000 NTAMS 0x0000000716000000 space 32768K,   0% used [0x0000000716000000, 0x0000000718000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000718000000 NTAMS 0x0000000718000000 space 32768K,   0% used [0x0000000718000000, 0x000000071a000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000071a000000 NTAMS 0x000000071a000000 space 32768K,   0% used [0x000000071a000000, 0x000000071c000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000071c000000 NTAMS 0x000000071c000000 space 32768K,   0% used [0x000000071c000000, 0x000000071e000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000071e000000 NTAMS 0x000000071e000000 space 32768K,   0% used [0x000000071e000000, 0x0000000720000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000720000000 NTAMS 0x0000000720000000 space 32768K,   0% used [0x0000000720000000, 0x0000000722000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000722000000 NTAMS 0x0000000722000000 space 32768K,   0% used [0x0000000722000000, 0x0000000724000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000724000000 NTAMS 0x0000000724000000 space 32768K,   0% used [0x0000000724000000, 0x0000000726000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000726000000 NTAMS 0x0000000726000000 space 32768K,   0% used [0x0000000726000000, 0x0000000728000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000728000000 NTAMS 0x0000000728000000 space 32768K,   0% used [0x0000000728000000, 0x000000072a000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000072a000000 NTAMS 0x000000072a000000 space 32768K,   0% used [0x000000072a000000, 0x000000072c000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000072c000000 NTAMS 0x000000072c000000 space 32768K,   0% used [0x000000072c000000, 0x000000072e000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000072e000000 NTAMS 0x000000072e000000 space 32768K,   0% used [0x000000072e000000, 0x0000000730000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000730000000 NTAMS 0x0000000730000000 space 32768K,   0% used [0x0000000730000000, 0x0000000732000000)")
    time.sleep(0.002)
    print(r"AC   0  S CS TS     3 PTAMS 0x0000000732000000 NTAMS 0x0000000732000000 space 32768K,  95% used [0x0000000732000000, 0x0000000734000000)")
    time.sleep(0.002)
    print(r"AC   0  S CS TS     3 PTAMS 0x0000000734000000 NTAMS 0x0000000734000000 space 32768K, 100% used [0x0000000734000000, 0x0000000736000000)")
    time.sleep(0.002)
    print(r"AC   0  S CS TS     3 PTAMS 0x0000000736000000 NTAMS 0x0000000736000000 space 32768K, 100% used [0x0000000736000000, 0x0000000738000000)")
    time.sleep(0.002)
    print(r"AC   0  S CS TS     3 PTAMS 0x0000000738000000 NTAMS 0x0000000738000000 space 32768K, 100% used [0x0000000738000000, 0x000000073a000000)")
    time.sleep(0.002)
    print(r"AC   0  S CS TS     3 PTAMS 0x000000073a000000 NTAMS 0x000000073a000000 space 32768K, 100% used [0x000000073a000000, 0x000000073c000000)")
    time.sleep(0.002)
    print(r"AC   0  S CS TS     3 PTAMS 0x000000073c000000 NTAMS 0x000000073c000000 space 32768K, 100% used [0x000000073c000000, 0x000000073e000000)")
    time.sleep(0.002)
    print(r"AC   0  S CS TS     3 PTAMS 0x000000073e000000 NTAMS 0x000000073e000000 space 32768K, 100% used [0x000000073e000000, 0x0000000740000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     1 PTAMS 0x0000000740000000 NTAMS 0x0000000740000000 space 32768K,   0% used [0x0000000740000000, 0x0000000742000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     1 PTAMS 0x0000000742000000 NTAMS 0x0000000742000000 space 32768K,   0% used [0x0000000742000000, 0x0000000744000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     1 PTAMS 0x0000000744000000 NTAMS 0x0000000744000000 space 32768K,   0% used [0x0000000744000000, 0x0000000746000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     1 PTAMS 0x0000000746000000 NTAMS 0x0000000746000000 space 32768K,   0% used [0x0000000746000000, 0x0000000748000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     1 PTAMS 0x0000000748000000 NTAMS 0x0000000748000000 space 32768K,   0% used [0x0000000748000000, 0x000000074a000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     1 PTAMS 0x000000074a000000 NTAMS 0x000000074a000000 space 32768K,   0% used [0x000000074a000000, 0x000000074c000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     1 PTAMS 0x000000074c000000 NTAMS 0x000000074c000000 space 32768K,   0% used [0x000000074c000000, 0x000000074e000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     1 PTAMS 0x000000074e000000 NTAMS 0x000000074e000000 space 32768K,   0% used [0x000000074e000000, 0x0000000750000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000750000000 NTAMS 0x0000000750000000 space 32768K,   0% used [0x0000000750000000, 0x0000000752000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000752000000 NTAMS 0x0000000752000000 space 32768K,   0% used [0x0000000752000000, 0x0000000754000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000754000000 NTAMS 0x0000000754000000 space 32768K,   0% used [0x0000000754000000, 0x0000000756000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000756000000 NTAMS 0x0000000756000000 space 32768K,   0% used [0x0000000756000000, 0x0000000758000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000758000000 NTAMS 0x0000000758000000 space 32768K,   0% used [0x0000000758000000, 0x000000075a000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000075a000000 NTAMS 0x000000075a000000 space 32768K,   0% used [0x000000075a000000, 0x000000075c000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000075c000000 NTAMS 0x000000075c000000 space 32768K,   0% used [0x000000075c000000, 0x000000075e000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000075e000000 NTAMS 0x000000075e000000 space 32768K,   0% used [0x000000075e000000, 0x0000000760000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000760000000 NTAMS 0x0000000760000000 space 32768K,   0% used [0x0000000760000000, 0x0000000762000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000762000000 NTAMS 0x0000000762000000 space 32768K,   0% used [0x0000000762000000, 0x0000000764000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000764000000 NTAMS 0x0000000764000000 space 32768K,   0% used [0x0000000764000000, 0x0000000766000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000766000000 NTAMS 0x0000000766000000 space 32768K,   0% used [0x0000000766000000, 0x0000000768000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000768000000 NTAMS 0x0000000768000000 space 32768K,   0% used [0x0000000768000000, 0x000000076a000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000076a000000 NTAMS 0x000000076a000000 space 32768K,   0% used [0x000000076a000000, 0x000000076c000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000076c000000 NTAMS 0x000000076c000000 space 32768K,   0% used [0x000000076c000000, 0x000000076e000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000076e000000 NTAMS 0x000000076e000000 space 32768K,   0% used [0x000000076e000000, 0x0000000770000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000770000000 NTAMS 0x0000000770000000 space 32768K,   0% used [0x0000000770000000, 0x0000000772000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000772000000 NTAMS 0x0000000772000000 space 32768K,   0% used [0x0000000772000000, 0x0000000774000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000774000000 NTAMS 0x0000000774000000 space 32768K,   0% used [0x0000000774000000, 0x0000000776000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000776000000 NTAMS 0x0000000776000000 space 32768K,   0% used [0x0000000776000000, 0x0000000778000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x0000000778000000 NTAMS 0x0000000778000000 space 32768K,   0% used [0x0000000778000000, 0x000000077a000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000077a000000 NTAMS 0x000000077a000000 space 32768K,   0% used [0x000000077a000000, 0x000000077c000000)")
    time.sleep(0.002)
    print(r"AC   0  F    TS     0 PTAMS 0x000000077c000000 NTAMS 0x000000077c000000 space 32768K,   0% used [0x000000077c000000, 0x000000077e000000)")
    time.sleep(0.002)
    print(r"AC   0  E    TS     0 PTAMS 0x000000077e000000 NTAMS 0x000000077e000000 space 32768K,  56% used [0x000000077e000000, 0x0000000780000000)")
    time.sleep(0.002)
    print(r"AC   0  E CS TS     0 PTAMS 0x0000000780000000 NTAMS 0x0000000780000000 space 32768K, 100% used [0x0000000780000000, 0x0000000782000000)")
    time.sleep(0.002)
    print(r"AC   0  E CS TS     0 PTAMS 0x0000000782000000 NTAMS 0x0000000782000000 space 32768K, 100% used [0x0000000782000000, 0x0000000784000000)")
    time.sleep(0.002)
    print(r"AC   0  E CS TS     0 PTAMS 0x0000000784000000 NTAMS 0x0000000784000000 space 32768K, 100% used [0x0000000784000000, 0x0000000786000000)")
    time.sleep(0.002)
    print(r"AC   0  E CS TS     0 PTAMS 0x0000000786000000 NTAMS 0x0000000786000000 space 32768K, 100% used [0x0000000786000000, 0x0000000788000000)")
    time.sleep(0.002)
    print(r"AC   0  E CS TS     0 PTAMS 0x0000000788000000 NTAMS 0x0000000788000000 space 32768K, 100% used [0x0000000788000000, 0x000000078a000000)")
    time.sleep(0.002)
    print(r"AC   0  E CS TS     0 PTAMS 0x000000078a000000 NTAMS 0x000000078a000000 space 32768K, 100% used [0x000000078a000000, 0x000000078c000000)")
    time.sleep(0.002)
    print(r"AC   0  E CS TS     0 PTAMS 0x000000078c000000 NTAMS 0x000000078c000000 space 32768K, 100% used [0x000000078c000000, 0x000000078e000000)")
    time.sleep(0.002)
    print(r"AC   0  E CS TS     0 PTAMS 0x000000078e000000 NTAMS 0x000000078e000000 space 32768K, 100% used [0x000000078e000000, 0x0000000790000000)")
    time.sleep(0.002)
    print(r"AC   0  E CS TS     0 PTAMS 0x0000000790000000 NTAMS 0x0000000790000000 space 32768K, 100% used [0x0000000790000000, 0x0000000792000000)")
    time.sleep(0.002)
    print(r"AC   0  E CS TS     0 PTAMS 0x0000000792000000 NTAMS 0x0000000792000000 space 32768K, 100% used [0x0000000792000000, 0x0000000794000000)")
    time.sleep(0.002)
    print(r"AC   0  E CS TS     0 PTAMS 0x0000000794000000 NTAMS 0x0000000794000000 space 32768K, 100% used [0x0000000794000000, 0x0000000796000000)")
    time.sleep(0.002)
    print(r"AC   0  E CS TS     0 PTAMS 0x0000000796000000 NTAMS 0x0000000796000000 space 32768K, 100% used [0x0000000796000000, 0x0000000798000000)")
    time.sleep(0.002)
    print(r"AC   0  E CS TS     0 PTAMS 0x0000000798000000 NTAMS 0x0000000798000000 space 32768K, 100% used [0x0000000798000000, 0x000000079a000000)")
    time.sleep(0.002)
    print(r"AC   0  E CS TS     0 PTAMS 0x000000079a000000 NTAMS 0x000000079a000000 space 32768K, 100% used [0x000000079a000000, 0x000000079c000000)")
    time.sleep(0.002)
    print(r"AC   0  E CS TS     0 PTAMS 0x000000079c000000 NTAMS 0x000000079c000000 space 32768K, 100% used [0x000000079c000000, 0x000000079e000000)")
    time.sleep(0.002)
    print(r"AC   0  E CS TS     0 PTAMS 0x000000079e000000 NTAMS 0x000000079e000000 space 32768K, 100% used [0x000000079e000000, 0x00000007a0000000)")
    time.sleep(0.002)
    print(r"AC   0  E CS TS     0 PTAMS 0x00000007a0000000 NTAMS 0x00000007a0000000 space 32768K, 100% used [0x00000007a0000000, 0x00000007a2000000)")
    time.sleep(0.002)
    print(r"AC   0  E CS TS     0 PTAMS 0x00000007a2000000 NTAMS 0x00000007a2000000 space 32768K, 100% used [0x00000007a2000000, 0x00000007a4000000)")
    time.sleep(0.002)
    print(r"AC   0  E CS TS     0 PTAMS 0x00000007a4000000 NTAMS 0x00000007a4000000 space 32768K, 100% used [0x00000007a4000000, 0x00000007a6000000)")
    time.sleep(0.002)
    print(r"AC   0  E CS TS     0 PTAMS 0x00000007a6000000 NTAMS 0x00000007a6000000 space 32768K, 100% used [0x00000007a6000000, 0x00000007a8000000)")
    time.sleep(0.002)
    print(r"AC   0  E CS TS     0 PTAMS 0x00000007a8000000 NTAMS 0x00000007a8000000 space 32768K, 100% used [0x00000007a8000000, 0x00000007aa000000)")
    time.sleep(0.002)
    print(r"AC   0  E CS TS     0 PTAMS 0x00000007aa000000 NTAMS 0x00000007aa000000 space 32768K, 100% used [0x00000007aa000000, 0x00000007ac000000)")
    time.sleep(0.002)
    print(r"AC   0  E CS TS     0 PTAMS 0x00000007ac000000 NTAMS 0x00000007ac000000 space 32768K, 100% used [0x00000007ac000000, 0x00000007ae000000)")
    time.sleep(0.002)
    print(r"AC   0  E CS TS     0 PTAMS 0x00000007ae000000 NTAMS 0x00000007ae000000 space 32768K, 100% used [0x00000007ae000000, 0x00000007b0000000)")
    time.sleep(0.002)
    print(r"AC   0  E CS TS     0 PTAMS 0x00000007b0000000 NTAMS 0x00000007b0000000 space 32768K, 100% used [0x00000007b0000000, 0x00000007b2000000)")
    time.sleep(0.002)
    print(r"AC   0  E CS TS     0 PTAMS 0x00000007b2000000 NTAMS 0x00000007b2000000 space 32768K, 100% used [0x00000007b2000000, 0x00000007b4000000)")
    time.sleep(0.002)
    print(r"AC   0  E CS TS     0 PTAMS 0x00000007b4000000 NTAMS 0x00000007b4000000 space 32768K, 100% used [0x00000007b4000000, 0x00000007b6000000)")
    time.sleep(0.002)
    print(r"AC   0  E CS TS     0 PTAMS 0x00000007b6000000 NTAMS 0x00000007b6000000 space 32768K, 100% used [0x00000007b6000000, 0x00000007b8000000)")
    time.sleep(0.002)
    print(r"AC   0  E CS TS     0 PTAMS 0x00000007b8000000 NTAMS 0x00000007b8000000 space 32768K, 100% used [0x00000007b8000000, 0x00000007ba000000)")
    time.sleep(0.002)
    print(r"AC   0  E CS TS     0 PTAMS 0x00000007ba000000 NTAMS 0x00000007ba000000 space 32768K, 100% used [0x00000007ba000000, 0x00000007bc000000)")
    time.sleep(0.002)
    print(r"AC   0  E CS TS     0 PTAMS 0x00000007bc000000 NTAMS 0x00000007bc000000 space 32768K, 100% used [0x00000007bc000000, 0x00000007be000000)")
    time.sleep(0.002)
    print(r"AC   0  E CS TS     0 PTAMS 0x00000007be000000 NTAMS 0x00000007be000000 space 32768K, 100% used [0x00000007be000000, 0x00000007c0000000)")
def possiblity(p):
    if random.randint(0,100) < 36:
        error(p)
    else:
        options(p)
possiblity(p)